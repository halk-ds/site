<?php

/**
 *Implements hook_permission()
 */
function my_custom_module_permission() {
	$perm = array();

	$perm['temp permission'] = array(
		'title'       => t('Temp permission'),
		'description' => t('Only registered user can see this block.')
	);

	return $perm;
}





/**
 *Implements hook_menu()
 */
function my_custom_module_menu() {
	$items = array();

	$items['main'] = array(
		'title'           => 'Main page',
		'page callback'   => 'my_custom_module_main_page',
		'access callback' => TRUE
	);
	$items['forbidden'] = array(
		'title'           => 'Error 404',
		'page callback'   => 'my_custom_module_forbidden',
		'access callback' => TRUE
	);
	$items['noaccess'] = array(
		'title'           => 'Error 403',
		'page callback'   => 'my_custom_module_noaccess',
		'access callback' => TRUE
	);
	$items['contacts'] = array(
		'title'           => 'Add contact',
		'page callback'   => 'my_custom_module_add_contact',
		'access callback' => TRUE
	);

	return $items;
}

/**
 * Function main_page
 */
function my_custom_module_main_page() {
	return t('This is main page of site.local');
}

/**
 * Function forbidden
 */
function my_custom_module_forbidden() {
	return t('ERROR 404. Page not found!');
}

/**
 * Function noaccess
 */
function my_custom_module_noaccess() {
	return t('ERROR 403. Access denied.');
}

/**
 * Function add_contact
 */
function my_custom_module_add_contact() {
	return drupal_get_form('my_custom_module_my_form');
}

function my_custom_module_my_form($form_state) {

$form = array(
	'name' => array(
		'#type' => 'textfield',
		'#title' => 'Name',
		'#required' => TRUE,
		'#default_value' => 'First name',
		'#description' => 'Enter your name. Use latin chars without spaces. Max 20 chars.',
		'#size' => '20',
		'#maxlenght' => '20'
	),
	'surname' => array(
		'#type' => 'textfield',
		'#title' => 'Surname',
		'#required' => TRUE,
		'#default_value' => 'Last name',
		'#description' => 'Enter your surname. Use latin chars without spaces. Max 20 chars.',
		'#size' => '20',
		'#maxlenght' => '20'
	),
	'nick' => array(
		'#type' => 'textfield',
		'#title' => 'Nick name',
		'#required' => TRUE,
		'#default_value' => 'Nick',
		'#description' => 'Enter your nick name. Use latin chars without spaces. Max 20 chars.',
		'#size' => '20',
		'#maxlenght' => '20'
	),
	'email' => array(
		'#type' => 'textfield',
		'#title' => 'Email',
		'#required' => TRUE,
		'#default_value' => 'email',
		'#description' => 'Enter your email.',
		'#size' => '20',
		'#maxlenght' => '255'
	),
	'telephone' => array(
		'#type' => 'textfield',
		'#title' => 'Telephone number',
		'#required' => FALSE,
		'#default_value' => '',
		'#description' => 'Enter your telephone number. Pattern: +x xxxx xx xx xxx',
		'#size' => '16',
		'#maxlenght' => '16'
	),
	'gender' => array(
		'#type' => 'radios',
		'#title' => t('Gender'),
		'#default_value' => variable_get('gender', 1),
		'#options' => array(t('Man'), t('Woman')),
	),
	'gender' => array(
		'#type' => 'radios',
		'#title' => t('Gender'),
		'#default_value' => variable_get('gender', 0),
		'#options' => array(t('Man'), t('Woman')),
	),
	'country' => array(
		'#type' => 'select',
		'#title' => t('Country'),
		'#default_value' => variable_get('country', 0),
		'#options' => array(t('Ukraine'), t('Russia'), t('USA')),
	),
	'description' => array(
		'#type' => 'textarea',
		'#title' => t('About you'),
		'#default_value' => 'Describe yourself...',
	),
	'rules' => array(
		'#type' => 'checkbox',
		'#title' => t('Do you agree?'),
		'#required' => TRUE
	),
	'description' => array(
		'#type' => 'textarea',
		'#title' => t('About you'),
		'#default_value' => 'Describe yourself...',
	),
	'rndtext' => array(
    '#type' => 'fieldset',
    '#title' => t('Random text field set'),
    'text' => array('random_text' => array(
    	'#type' => 'textfield',
    	'#title' => t('Text field for random text value'),
    	'#default_value' => mt_rand(0,255)
    ))
  )
);

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
  );
  return $form;
}

function my_custom_module_my_form_validate($form, &$form_state) {
	$field='name';
	if (!preg_match('/^[A-Za-z]{1,20}$/', $form_state['values'][$field])) {
		form_set_error($field, t('Error in "' . $field . '" field. Can`t validate ' . $form_state['values'][$field]));
	}

	$field='surname';
	if (!preg_match('/^[A-Za-z]{1,20}$/', $form_state['values'][$field])) {
		form_set_error($field, t('Error in "' . $field . '" field. Can`t validate ' . $form_state['values'][$field]));
	}

	$field='nick';
	if (!preg_match('/^[A-Za-z]{1,20}$/', $form_state['values'][$field])) {
		form_set_error($field, t('Error in "' . $field . '" field. Can`t validate ' . $form_state['values'][$field]));
	}

	$field='email';
	if (!filter_var($form_state['values'][$field], FILTER_VALIDATE_EMAIL)) {
		form_set_error($field, t('Error in "' . $field . '" field. Can`t validate ' . $form_state['values'][$field]));
	}

	$field='telephone';
	if (!preg_match('/^(\+\d\s\d\d\d\d\s\d\d\s\d\d\s\d\d\d)|()$/', $form_state['values'][$field])) {
		form_set_error($field, t('Error in "' . $field . '" field. Can`t validate ' . $form_state['values'][$field]));
	}
}



// drupal_set_message(my_custom_module_show_array($));
function my_custom_module_show_array($ar, $maxdeepth = 3, $deepth = 1) {

	$dummy = '&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp';
	$tab = '';
	for ($i=1; $i<$deepth; $i++) {
		$tab .= $dummy;
	}
	$dummy = '*';
	$prefix = '';
	for ($i=1; $i<$deepth; $i++) {
		$prefix .= $dummy;
	}
	$prefix .= ' ';
	$dummy = '';

	if (($deepth <= $maxdeepth) && ($deepth > 0) ) {
		$deepth = $deepth + 1;
		if (!empty($ar)) {
			foreach($ar as $k => $v) {
				if (is_array($v) || is_object($v)) {
					if (is_array($v)) {
						$dummy .= $tab . $prefix . $k . ' => Array<br/>';
					}
					else {
						$dummy .= $tab . $prefix . $k . ' => Object<br/>';
					}
					$dummy .= func_my_theme_show_array($v, $maxdeepth, $deepth);
				}
				else {
					if ($v == NULL) $v = 'NULL';
					$dummy .= $tab . $prefix . $k . ' => ' . $v . '<br/>';
				}
			}
		}
		else {
			$dummy .= $tab . '...empty...<br/>';
		}
	}
	else {
		$dummy = $tab . ' MAX deepth...<br/>';
	}

	return $dummy;
}





/**
 *Implements hook_block_info()
 */
function my_custom_module_block_info() {
	$blocks = array();

	$blocks['my_custom_module_test']['info']  = 'Random text';
	$blocks['my_custom_module_test']['cache'] = 'DRUPAL_NO_CACHE';

	return $blocks;
}

/**
 * Implements hook_block_view()
 */
function my_custom_module_block_view($delta = '') {
	$block = array();

	if (user_access('temp permission')) {
		$block_content = (string) mt_rand(0,255);
	}
	else {
		$block_content = 'Access to view this content is denied';
	}

	switch ($delta) {
		case 'my_custom_module_test':
			$block['subject'] = 'Dummy text';
			$block['content'] = $block_content;
		break;
	}

	return $block;
}





/**
 * Implements hook_node_view()
 */
function my_custom_module_node_view($node, $view_mode, $langcode) {
	if ($view_mode == 'full') {
		$node->content['mycontent'] = array(
		'#markup' => 'This content added by hook_node_view().',
		'#weight' => 10,
		);
	}
	//drupal_set_message(my_custom_module_show_array($node));
	if ($node->type == 'webform') {
		$node->content['mycontent'] = array(
		'#markup' => 'Random form text ' . mt_rand(0,255),
		'#weight' => 10,
		);
	}
}





/**
 * Implements hook_node_access()
 */
function my_custom_module_node_access($node, $op, $account) {
	if (($op == 'view') && ($account->uid == 4)) {
		return NODE_ACCESS_DENY;
	}
}





/**
 * Implements hook_user_view_alter()
 */
function my_custom_module_user_view_alter(&$account, $view_mode, $langcode) {
	unset($account['summary']);
}
